{%- set license_classifiers = {
    'GNU Lesser General Public License v2.1': 'License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)',
    'MIT license': 'License :: OSI Approved :: MIT License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} -%}
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_short_description }}"
version = "{{ cookiecutter.version }}"
keywords = ["{{ cookiecutter.project_slug }}"]
license = "LICENSE"
readme = "README.md"
include = ["LICENSE", "README.md"]
exclude = ["contrib", "docs", "test*"]
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
documentation = "https://{{ cookiecutter.project_slug }}.readthedocs.io/"
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
authors = [
  "{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>",
]
packages = [
  { include = "{{ cookiecutter.namespace }}" },
]
classifiers = [
  'Development Status :: 2 - Pre-Alpha',
  'Intended Audience :: Developers',
{%- if cookiecutter.open_source_license in license_classifiers %}
  '{{ license_classifiers[cookiecutter.open_source_license] }}',
{%- endif %}
  'Natural Language :: English',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
]

[tool.poetry.dependencies]
python = ">=3.9"
{%- if cookiecutter.command_line_interface|lower == 'click' %}
Click = "8.1.3"
{%- endif %}

[tool.poetry.group.dev.dependencies]
build = "1.2.1"
bump2version = "1.0.1"
coverage = "7.4.4"
cruft = "2.15.0"
faker = "24.8.0"
pre-commit = "3.7.0"
pytest = "8.1.1"
pytest-cov = "5.0.0"
pytest-deadfixtures = "2.2.1"
pytest-mock = "3.14.0"

[tool.poetry.group.docs.dependencies]
myst-parser = "2.0.0"
Sphinx = "7.2.6"
sphinx-rtd-theme = "2.0.0"


[tool.pytest.ini_options]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = "--doctest-modules"


[tool.ruff]
select = ["E", "F", "I"]
ignore = ["E501"]
line-length = 88
